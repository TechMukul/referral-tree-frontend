{
    "sourceFile": "Components/bg/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1721478430902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721478532431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+// Components/bg/index.tsx\r\n+\r\n+import React from \"react\";\r\n+import { motion } from \"framer-motion\";\r\n+import { cn } from \"../../lib/utils\";\r\n+\r\n+export const BoxesCore = ({ className, ...rest }: { className?: string }) => {\r\n+  const rows = new Array(150).fill(1);\r\n+  const cols = new Array(100).fill(1);\r\n+  const colors = [\r\n+    \"--sky-300\",\r\n+    \"--pink-300\",\r\n+    \"--green-300\",\r\n+    \"--yellow-300\",\r\n+    \"--red-300\",\r\n+    \"--purple-300\",\r\n+    \"--blue-300\",\r\n+    \"--indigo-300\",\r\n+    \"--violet-300\",\r\n+  ];\r\n+\r\n+  const getRandomColor = () => {\r\n+    return colors[Math.floor(Math.random() * colors.length)];\r\n+  };\r\n+\r\n+  return (\r\n+    <div\r\n+      style={{\r\n+        transform: `translate(-40%,-60%) skewX(-48deg) skewY(14deg) scale(0.675) rotate(0deg) translateZ(0)`,\r\n+      }}\r\n+      className={cn(\r\n+        \"absolute left-1/4 p-4 -top-1/4 flex -translate-x-1/2 -translate-y-1/2 w-full h-full z-0\",\r\n+        className\r\n+      )}\r\n+      {...rest}\r\n+    >\r\n+      {rows.map((_, i) => (\r\n+        <motion.div key={`row${i}`} className=\"w-16 h-8 border-l border-slate-700 relative\">\r\n+          {cols.map((_, j) => (\r\n+            <motion.div\r\n+              key={`col${j}`}\r\n+              className=\"w-16 h-8 border-r border-t border-slate-700 relative\"\r\n+              whileHover={{\r\n+                backgroundColor: `var(${getRandomColor()})`,\r\n+                transition: { duration: 0 },\r\n+              }}\r\n+              animate={{\r\n+                transition: { duration: 2 },\r\n+              }}\r\n+            >\r\n+              {j % 2 === 0 && i % 2 === 0 ? (\r\n+                <svg\r\n+                  xmlns=\"http://www.w3.org/2000/svg\"\r\n+                  fill=\"none\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                  strokeWidth=\"1.5\"\r\n+                  stroke=\"currentColor\"\r\n+                  className=\"absolute h-6 w-10 -top-[14px] -left-[22px] text-slate-700 stroke-[1px] pointer-events-none\"\r\n+                >\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6v12m6-6H6\" />\r\n+                </svg>\r\n+              ) : null}\r\n+            </motion.div>\r\n+          ))}\r\n+        </motion.div>\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export const Boxes = React.memo(BoxesCore);\r\n"
                }
            ],
            "date": 1721478430902,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport const BoxesCore = ({ className, ...rest }: { className?: string }) => {\r\n  const rows = new Array(150).fill(1);\r\n  const cols = new Array(100).fill(1);\r\n  let colors = [\r\n    \"--sky-300\",\r\n    \"--pink-300\",\r\n    \"--green-300\",\r\n    \"--yellow-300\",\r\n    \"--red-300\",\r\n    \"--purple-300\",\r\n    \"--blue-300\",\r\n    \"--indigo-300\",\r\n    \"--violet-300\",\r\n  ];\r\n  const getRandomColor = () => {\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `translate(-40%,-60%) skewX(-48deg) skewY(14deg) scale(0.675) rotate(0deg) translateZ(0)`,\r\n      }}\r\n      className={cn(\r\n        \"absolute left-1/4 p-4 -top-1/4 flex  -translate-x-1/2 -translate-y-1/2 w-full h-full z-0 \",\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      ld\r\n      {rows.map((_, i) => (\r\n        <motion.div\r\n          key={`row` + i}\r\n          className=\"w-16 h-8  border-l  border-slate-700 relative\"\r\n        >\r\n          {cols.map((_, j) => (\r\n            <motion.div\r\n              whileHover={{\r\n                backgroundColor: `var(${getRandomColor()})`,\r\n                transition: { duration: 0 },\r\n              }}\r\n              animate={{\r\n                transition: { duration: 2 },\r\n              }}\r\n              key={`col` + j}\r\n              className=\"w-16 h-8  border-r border-t border-slate-700 relative\"\r\n            >\r\n              {j % 2 === 0 && i % 2 === 0 ? (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  className=\"absolute h-6 w-10 -top-[14px] -left-[22px] text-slate-700 stroke-[1px] pointer-events-none\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M12 6v12m6-6H6\"\r\n                  />\r\n                </svg>\r\n              ) : null}\r\n            </motion.div>\r\n          ))}\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Boxes = React.memo(BoxesCore);\r\n"
        }
    ]
}