{
    "sourceFile": "Components/Navbar/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1721366731102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721367168162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,20 +37,31 @@\n       if (storedCoins) {\r\n         setUserCoins(storedCoins);\r\n       }\r\n \r\n-      // Listen for changes in localStorage 'userCoins'\r\n-      const handleStorageChange = (event: StorageEvent) => {\r\n-        if (event.key === 'userCoins') {\r\n-          setUserCoins(event.newValue);\r\n+      // Function to fetch updated user coins\r\n+      const fetchUserCoins = async () => {\r\n+        try {\r\n+          const token = localStorage.getItem('accessToken');\r\n+          const response = await axios.get('https://www.referback.trollsufficient.com/user/coins', {\r\n+            headers: {\r\n+              Authorization: `Bearer ${token}`,\r\n+            },\r\n+          });\r\n+          const { coins } = response.data;\r\n+          setUserCoins(coins.toString());\r\n+          localStorage.setItem('userCoins', coins.toString());\r\n+        } catch (error) {\r\n+          console.error('Error fetching user coins:', error);\r\n         }\r\n       };\r\n \r\n-      window.addEventListener('storage', handleStorageChange);\r\n+      // Fetch initial coins and start interval to update every 1 second\r\n+      fetchUserCoins();\r\n+      const intervalId = setInterval(fetchUserCoins, 1000);\r\n \r\n-      return () => {\r\n-        window.removeEventListener('storage', handleStorageChange);\r\n-      };\r\n+      // Cleanup function to clear interval\r\n+      return () => clearInterval(intervalId);\r\n     }\r\n   }, [router.query]);\r\n \r\n   const handleLogout = () => {\r\n"
                },
                {
                    "date": 1721367817507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { useRouter } from 'next/router';\r\n import Link from 'next/link';\r\n import style from './index.module.scss'; // Adjust the module path accordingly\r\n \r\n-const Navbar = () => {\r\n+const Navbar = ({coins}) => {\r\n   const [NavComponent, setNavComponent] = useState<any>(null);\r\n   const [userName, setUserName] = useState<string>('');\r\n   const [userCoins, setUserCoins] = useState<string>('');\r\n   const router = useRouter();\r\n"
                },
                {
                    "date": 1721367863395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import React, { useEffect, useState } from 'react';\r\n+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n+import { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n+import { Button } from 'react-bootstrap';\r\n+import { useRouter } from 'next/router';\r\n+import Link from 'next/link';\r\n+import style from './index.module.scss'; // Adjust the module path accordingly\r\n+\r\n+const Navbar = (coins) => {\r\n+  const [NavComponent, setNavComponent] = useState<any>(null);\r\n+  const [userName, setUserName] = useState<string>('');\r\n+  const [userCoins, setUserCoins] = useState<string>('');\r\n+  const router = useRouter();\r\n+\r\n+  useEffect(() => {\r\n+    const loadNavComponent = async () => {\r\n+      const { Nav } = await import('react-bootstrap');\r\n+      setNavComponent(Nav);\r\n+    };\r\n+\r\n+    loadNavComponent();\r\n+\r\n+    // Fetch user's name from query parameters or local storage\r\n+    if (typeof window !== 'undefined') { // Check if window is defined (client-side)\r\n+      const { name } = router.query;\r\n+      if (name && typeof name === 'string') {\r\n+        setUserName(name);\r\n+        localStorage.setItem('userName', name); // Store the user's name in local storage\r\n+      } else {\r\n+        const storedName = localStorage.getItem('userName');\r\n+        if (storedName) {\r\n+          setUserName(storedName);\r\n+        }\r\n+      }\r\n+\r\n+      const storedCoins = localStorage.getItem('userCoins');\r\n+      if (storedCoins) {\r\n+        setUserCoins(storedCoins);\r\n+      }\r\n+\r\n+      // Function to fetch updated user coins\r\n+      const fetchUserCoins = async () => {\r\n+        try {\r\n+          const token = localStorage.getItem('accessToken');\r\n+          const response = await axios.get('https://www.referback.trollsufficient.com/user/coins', {\r\n+            headers: {\r\n+              Authorization: `Bearer ${token}`,\r\n+            },\r\n+          });\r\n+          const { coins } = response.data;\r\n+          setUserCoins(coins.toString());\r\n+          localStorage.setItem('userCoins', coins.toString());\r\n+        } catch (error) {\r\n+          console.error('Error fetching user coins:', error);\r\n+        }\r\n+      };\r\n+\r\n+      // Fetch initial coins and start interval to update every 1 second\r\n+      fetchUserCoins();\r\n+      const intervalId = setInterval(fetchUserCoins, 1000);\r\n+\r\n+      // Cleanup function to clear interval\r\n+      return () => clearInterval(intervalId);\r\n+    }\r\n+  }, [router.query]);\r\n+\r\n+  const handleLogout = () => {\r\n+    localStorage.removeItem('accessToken');\r\n+    localStorage.removeItem('userName'); // Remove the user's name from local storage\r\n+    localStorage.removeItem('userCoins'); // Remove the user's coins from local storage\r\n+    router.push('/');\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <div className={style.navbar}>\r\n+        <div className={style.username}>{userName ? `Hi ${userName}` : 'Welcome User'}</div>\r\n+        {userCoins && <div className={style.coins}>{`Coins: ${coins}`}</div>}\r\n+        <div className={style.navlinksContainer}>\r\n+          <Link href=\"/home\" className={style.navlinks}>\r\n+            Home\r\n+          </Link>\r\n+          {NavComponent && (\r\n+            <NavComponent.Item>\r\n+              <NavComponent.Link eventKey=\"disabled\" className={style.navlinks}>\r\n+                <Link href=\"/Tree\">All Users</Link>\r\n+              </NavComponent.Link>\r\n+              <NavComponent.Link eventKey=\"disabled\" className={style.navlinks}>\r\n+                <Link href=\"/Message\">Messages</Link>\r\n+              </NavComponent.Link>\r\n+            </NavComponent.Item>\r\n+          )}\r\n+          <Button variant=\"outline-light\" onClick={handleLogout} className={style.navButton}>\r\n+            <FontAwesomeIcon icon={faSignOutAlt} className={style.navIcon} />\r\n+            Logout\r\n+          </Button>\r\n+        </div>\r\n+      </div>\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default Navbar;\r\n"
                },
                {
                    "date": 1721367965885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,107 +100,4 @@\n   );\r\n };\r\n \r\n export default Navbar;\r\n-import React, { useEffect, useState } from 'react';\r\n-import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n-import { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n-import { Button } from 'react-bootstrap';\r\n-import { useRouter } from 'next/router';\r\n-import Link from 'next/link';\r\n-import style from './index.module.scss'; // Adjust the module path accordingly\r\n-\r\n-const Navbar = ({coins}) => {\r\n-  const [NavComponent, setNavComponent] = useState<any>(null);\r\n-  const [userName, setUserName] = useState<string>('');\r\n-  const [userCoins, setUserCoins] = useState<string>('');\r\n-  const router = useRouter();\r\n-\r\n-  useEffect(() => {\r\n-    const loadNavComponent = async () => {\r\n-      const { Nav } = await import('react-bootstrap');\r\n-      setNavComponent(Nav);\r\n-    };\r\n-\r\n-    loadNavComponent();\r\n-\r\n-    // Fetch user's name from query parameters or local storage\r\n-    if (typeof window !== 'undefined') { // Check if window is defined (client-side)\r\n-      const { name } = router.query;\r\n-      if (name && typeof name === 'string') {\r\n-        setUserName(name);\r\n-        localStorage.setItem('userName', name); // Store the user's name in local storage\r\n-      } else {\r\n-        const storedName = localStorage.getItem('userName');\r\n-        if (storedName) {\r\n-          setUserName(storedName);\r\n-        }\r\n-      }\r\n-\r\n-      const storedCoins = localStorage.getItem('userCoins');\r\n-      if (storedCoins) {\r\n-        setUserCoins(storedCoins);\r\n-      }\r\n-\r\n-      // Function to fetch updated user coins\r\n-      const fetchUserCoins = async () => {\r\n-        try {\r\n-          const token = localStorage.getItem('accessToken');\r\n-          const response = await axios.get('https://www.referback.trollsufficient.com/user/coins', {\r\n-            headers: {\r\n-              Authorization: `Bearer ${token}`,\r\n-            },\r\n-          });\r\n-          const { coins } = response.data;\r\n-          setUserCoins(coins.toString());\r\n-          localStorage.setItem('userCoins', coins.toString());\r\n-        } catch (error) {\r\n-          console.error('Error fetching user coins:', error);\r\n-        }\r\n-      };\r\n-\r\n-      // Fetch initial coins and start interval to update every 1 second\r\n-      fetchUserCoins();\r\n-      const intervalId = setInterval(fetchUserCoins, 1000);\r\n-\r\n-      // Cleanup function to clear interval\r\n-      return () => clearInterval(intervalId);\r\n-    }\r\n-  }, [router.query]);\r\n-\r\n-  const handleLogout = () => {\r\n-    localStorage.removeItem('accessToken');\r\n-    localStorage.removeItem('userName'); // Remove the user's name from local storage\r\n-    localStorage.removeItem('userCoins'); // Remove the user's coins from local storage\r\n-    router.push('/');\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-      <div className={style.navbar}>\r\n-        <div className={style.username}>{userName ? `Hi ${userName}` : 'Welcome User'}</div>\r\n-        {userCoins && <div className={style.coins}>{`Coins: ${userCoins}`}</div>}\r\n-        <div className={style.navlinksContainer}>\r\n-          <Link href=\"/home\" className={style.navlinks}>\r\n-            Home\r\n-          </Link>\r\n-          {NavComponent && (\r\n-            <NavComponent.Item>\r\n-              <NavComponent.Link eventKey=\"disabled\" className={style.navlinks}>\r\n-                <Link href=\"/Tree\">All Users</Link>\r\n-              </NavComponent.Link>\r\n-              <NavComponent.Link eventKey=\"disabled\" className={style.navlinks}>\r\n-                <Link href=\"/Message\">Messages</Link>\r\n-              </NavComponent.Link>\r\n-            </NavComponent.Item>\r\n-          )}\r\n-          <Button variant=\"outline-light\" onClick={handleLogout} className={style.navButton}>\r\n-            <FontAwesomeIcon icon={faSignOutAlt} className={style.navIcon} />\r\n-            Logout\r\n-          </Button>\r\n-        </div>\r\n-      </div>\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default Navbar;\r\n"
                },
                {
                    "date": 1721367978449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n     localStorage.removeItem('userName'); // Remove the user's name from local storage\r\n     localStorage.removeItem('userCoins'); // Remove the user's coins from local storage\r\n     router.push('/');\r\n   };\r\n-\r\n+console.log(coins)\r\n   return (\r\n     <>\r\n       <div className={style.navbar}>\r\n         <div className={style.username}>{userName ? `Hi ${userName}` : 'Welcome User'}</div>\r\n"
                },
                {
                    "date": 1721367991110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n     localStorage.removeItem('userName'); // Remove the user's name from local storage\r\n     localStorage.removeItem('userCoins'); // Remove the user's coins from local storage\r\n     router.push('/');\r\n   };\r\n-console.log(coins)\r\n+console.log(coins.coins)\r\n   return (\r\n     <>\r\n       <div className={style.navbar}>\r\n         <div className={style.username}>{userName ? `Hi ${userName}` : 'Welcome User'}</div>\r\n"
                },
                {
                    "date": 1721367997540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n   return (\r\n     <>\r\n       <div className={style.navbar}>\r\n         <div className={style.username}>{userName ? `Hi ${userName}` : 'Welcome User'}</div>\r\n-        {userCoins && <div className={style.coins}>{`Coins: ${coins}`}</div>}\r\n+        {userCoins && <div className={style.coins}>{`Coins: ${coins.coins}`}</div>}\r\n         <div className={style.navlinksContainer}>\r\n           <Link href=\"/home\" className={style.navlinks}>\r\n             Home\r\n           </Link>\r\n"
                },
                {
                    "date": 1721368279454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { useRouter } from 'next/router';\r\n import Link from 'next/link';\r\n import style from './index.module.scss'; // Adjust the module path accordingly\r\n \r\n-const Navbar = (coins) => {\r\n+const Navbar = () => {\r\n   const [NavComponent, setNavComponent] = useState<any>(null);\r\n   const [userName, setUserName] = useState<string>('');\r\n   const [userCoins, setUserCoins] = useState<string>('');\r\n   const router = useRouter();\r\n@@ -69,14 +69,14 @@\n     localStorage.removeItem('userName'); // Remove the user's name from local storage\r\n     localStorage.removeItem('userCoins'); // Remove the user's coins from local storage\r\n     router.push('/');\r\n   };\r\n-console.log(coins.coins)\r\n+\r\n   return (\r\n     <>\r\n       <div className={style.navbar}>\r\n         <div className={style.username}>{userName ? `Hi ${userName}` : 'Welcome User'}</div>\r\n-        {userCoins && <div className={style.coins}>{`Coins: ${coins.coins}`}</div>}\r\n+        {userCoins && <div className={style.coins}>{`Coins: ${userCoins}`}</div>}\r\n         <div className={style.navlinksContainer}>\r\n           <Link href=\"/home\" className={style.navlinks}>\r\n             Home\r\n           </Link>\r\n"
                },
                {
                    "date": 1721368304430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n import { Button } from 'react-bootstrap';\r\n import { useRouter } from 'next/router';\r\n import Link from 'next/link';\r\n+import axios from 'axios'\r\n import style from './index.module.scss'; // Adjust the module path accordingly\r\n \r\n const Navbar = () => {\r\n   const [NavComponent, setNavComponent] = useState<any>(null);\r\n"
                },
                {
                    "date": 1721368717266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n import { Button } from 'react-bootstrap';\r\n import { useRouter } from 'next/router';\r\n import Link from 'next/link';\r\n-import axios from 'axios'\r\n import style from './index.module.scss'; // Adjust the module path accordingly\r\n \r\n const Navbar = () => {\r\n   const [NavComponent, setNavComponent] = useState<any>(null);\r\n@@ -20,9 +19,9 @@\n     };\r\n \r\n     loadNavComponent();\r\n \r\n-    // Fetch user's name from query parameters or local storage\r\n+    // Fetch user's name and coins from query parameters or local storage\r\n     if (typeof window !== 'undefined') { // Check if window is defined (client-side)\r\n       const { name } = router.query;\r\n       if (name && typeof name === 'string') {\r\n         setUserName(name);\r\n@@ -37,32 +36,8 @@\n       const storedCoins = localStorage.getItem('userCoins');\r\n       if (storedCoins) {\r\n         setUserCoins(storedCoins);\r\n       }\r\n-\r\n-      // Function to fetch updated user coins\r\n-      const fetchUserCoins = async () => {\r\n-        try {\r\n-          const token = localStorage.getItem('accessToken');\r\n-          const response = await axios.get('https://www.referback.trollsufficient.com/user/coins', {\r\n-            headers: {\r\n-              Authorization: `Bearer ${token}`,\r\n-            },\r\n-          });\r\n-          const { coins } = response.data;\r\n-          setUserCoins(coins.toString());\r\n-          localStorage.setItem('userCoins', coins.toString());\r\n-        } catch (error) {\r\n-          console.error('Error fetching user coins:', error);\r\n-        }\r\n-      };\r\n-\r\n-      // Fetch initial coins and start interval to update every 1 second\r\n-      fetchUserCoins();\r\n-      const intervalId = setInterval(fetchUserCoins, 1000);\r\n-\r\n-      // Cleanup function to clear interval\r\n-      return () => clearInterval(intervalId);\r\n     }\r\n   }, [router.query]);\r\n \r\n   const handleLogout = () => {\r\n"
                }
            ],
            "date": 1721366731102,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport style from './index.module.scss'; // Adjust the module path accordingly\r\n\r\nconst Navbar = () => {\r\n  const [NavComponent, setNavComponent] = useState<any>(null);\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [userCoins, setUserCoins] = useState<string>('');\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const loadNavComponent = async () => {\r\n      const { Nav } = await import('react-bootstrap');\r\n      setNavComponent(Nav);\r\n    };\r\n\r\n    loadNavComponent();\r\n\r\n    // Fetch user's name from query parameters or local storage\r\n    if (typeof window !== 'undefined') { // Check if window is defined (client-side)\r\n      const { name } = router.query;\r\n      if (name && typeof name === 'string') {\r\n        setUserName(name);\r\n        localStorage.setItem('userName', name); // Store the user's name in local storage\r\n      } else {\r\n        const storedName = localStorage.getItem('userName');\r\n        if (storedName) {\r\n          setUserName(storedName);\r\n        }\r\n      }\r\n\r\n      const storedCoins = localStorage.getItem('userCoins');\r\n      if (storedCoins) {\r\n        setUserCoins(storedCoins);\r\n      }\r\n\r\n      // Listen for changes in localStorage 'userCoins'\r\n      const handleStorageChange = (event: StorageEvent) => {\r\n        if (event.key === 'userCoins') {\r\n          setUserCoins(event.newValue);\r\n        }\r\n      };\r\n\r\n      window.addEventListener('storage', handleStorageChange);\r\n\r\n      return () => {\r\n        window.removeEventListener('storage', handleStorageChange);\r\n      };\r\n    }\r\n  }, [router.query]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('userName'); // Remove the user's name from local storage\r\n    localStorage.removeItem('userCoins'); // Remove the user's coins from local storage\r\n    router.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.navbar}>\r\n        <div className={style.username}>{userName ? `Hi ${userName}` : 'Welcome User'}</div>\r\n        {userCoins && <div className={style.coins}>{`Coins: ${userCoins}`}</div>}\r\n        <div className={style.navlinksContainer}>\r\n          <Link href=\"/home\" className={style.navlinks}>\r\n            Home\r\n          </Link>\r\n          {NavComponent && (\r\n            <NavComponent.Item>\r\n              <NavComponent.Link eventKey=\"disabled\" className={style.navlinks}>\r\n                <Link href=\"/Tree\">All Users</Link>\r\n              </NavComponent.Link>\r\n              <NavComponent.Link eventKey=\"disabled\" className={style.navlinks}>\r\n                <Link href=\"/Message\">Messages</Link>\r\n              </NavComponent.Link>\r\n            </NavComponent.Item>\r\n          )}\r\n          <Button variant=\"outline-light\" onClick={handleLogout} className={style.navButton}>\r\n            <FontAwesomeIcon icon={faSignOutAlt} className={style.navIcon} />\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"
        }
    ]
}