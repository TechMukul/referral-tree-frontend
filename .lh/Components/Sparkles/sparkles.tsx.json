{
    "sourceFile": "Components/Sparkles/sparkles.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1721478657273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1721479035676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+\"use client\";\r\n+import React from \"react\";\r\n+import { motion } from \"framer-motion\";\r\n+import { cn } from \"@/lib/utils\";\r\n+\r\n+export const BoxesCore = ({ className, ...rest }: { className?: string }) => {\r\n+  const rows = new Array(150).fill(1);\r\n+  const cols = new Array(100).fill(1);\r\n+  let colors = [\r\n+    \"--sky-300\",\r\n+    \"--pink-300\",\r\n+    \"--green-300\",\r\n+    \"--yellow-300\",\r\n+    \"--red-300\",\r\n+    \"--purple-300\",\r\n+    \"--blue-300\",\r\n+    \"--indigo-300\",\r\n+    \"--violet-300\",\r\n+  ];\r\n+  const getRandomColor = () => {\r\n+    return colors[Math.floor(Math.random() * colors.length)];\r\n+  };\r\n+\r\n+  return (\r\n+    <div\r\n+      style={{\r\n+        transform: `translate(-40%,-60%) skewX(-48deg) skewY(14deg) scale(0.675) rotate(0deg) translateZ(0)`,\r\n+      }}\r\n+      className={cn(\r\n+        \"absolute left-1/4 p-4 -top-1/4 flex  -translate-x-1/2 -translate-y-1/2 w-full h-full z-0 \",\r\n+        className\r\n+      )}\r\n+      {...rest}\r\n+    >\r\n+      {rows.map((_, i) => (\r\n+        <motion.div\r\n+          key={`row` + i}\r\n+          className=\"w-16 h-8  border-l  border-slate-700 relative\"\r\n+        >\r\n+          {cols.map((_, j) => (\r\n+            <motion.div\r\n+              whileHover={{\r\n+                backgroundColor: `var(${getRandomColor()})`,\r\n+                transition: { duration: 0 },\r\n+              }}\r\n+              animate={{\r\n+                transition: { duration: 2 },\r\n+              }}\r\n+              key={`col` + j}\r\n+              className=\"w-16 h-8  border-r border-t border-slate-700 relative\"\r\n+            >\r\n+              {j % 2 === 0 && i % 2 === 0 ? (\r\n+                <svg\r\n+                  xmlns=\"http://www.w3.org/2000/svg\"\r\n+                  fill=\"none\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                  strokeWidth=\"1.5\"\r\n+                  stroke=\"currentColor\"\r\n+                  className=\"absolute h-6 w-10 -top-[14px] -left-[22px] text-slate-700 stroke-[1px] pointer-events-none\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    d=\"M12 6v12m6-6H6\"\r\n+                  />\r\n+                </svg>\r\n+              ) : null}\r\n+            </motion.div>\r\n+          ))}\r\n+        </motion.div>\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export const Boxes = React.memo(BoxesCore);\r\n"
                },
                {
                    "date": 1721479274258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,12 @@\n import React from \"react\";\r\n import { motion } from \"framer-motion\";\r\n import { cn } from \"@/lib/utils\";\r\n \r\n-export const BoxesCore = ({ className, ...rest }: { className?: string }) => {\r\n+const BoxesCore = ({ className, ...rest }) => {\r\n   const rows = new Array(150).fill(1);\r\n   const cols = new Array(100).fill(1);\r\n-  let colors = [\r\n+  const colors = [\r\n     \"--sky-300\",\r\n     \"--pink-300\",\r\n     \"--green-300\",\r\n     \"--yellow-300\",\r\n@@ -16,8 +16,9 @@\n     \"--blue-300\",\r\n     \"--indigo-300\",\r\n     \"--violet-300\",\r\n   ];\r\n+\r\n   const getRandomColor = () => {\r\n     return colors[Math.floor(Math.random() * colors.length)];\r\n   };\r\n \r\n@@ -33,22 +34,22 @@\n       {...rest}\r\n     >\r\n       {rows.map((_, i) => (\r\n         <motion.div\r\n-          key={`row` + i}\r\n-          className=\"w-16 h-8  border-l  border-slate-700 relative\"\r\n+          key={`row${i}`}\r\n+          className=\"w-16 h-8 border-l border-slate-700 relative\"\r\n         >\r\n           {cols.map((_, j) => (\r\n             <motion.div\r\n+              key={`col${j}`}\r\n               whileHover={{\r\n                 backgroundColor: `var(${getRandomColor()})`,\r\n                 transition: { duration: 0 },\r\n               }}\r\n               animate={{\r\n                 transition: { duration: 2 },\r\n               }}\r\n-              key={`col` + j}\r\n-              className=\"w-16 h-8  border-r border-t border-slate-700 relative\"\r\n+              className=\"w-16 h-8 border-r border-t border-slate-700 relative\"\r\n             >\r\n               {j % 2 === 0 && i % 2 === 0 ? (\r\n                 <svg\r\n                   xmlns=\"http://www.w3.org/2000/svg\"\r\n@@ -72,439 +73,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export const Boxes = React.memo(BoxesCore);\r\n-\"use client\";\r\n-import React from \"react\";\r\n-import { useEffect, useState } from \"react\";\r\n-import Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\n-import type { Container, SingleOrMultiple } from \"@tsparticles/engine\";\r\n-import { loadSlim } from \"@tsparticles/slim\";\r\n-import { cn } from \"@/lib/utils\";\r\n-import { motion, useAnimation } from \"framer-motion\";\r\n-\r\n-type ParticlesProps = {\r\n-  id?: string;\r\n-  className?: string;\r\n-  background?: string;\r\n-  particleSize?: number;\r\n-  minSize?: number;\r\n-  maxSize?: number;\r\n-  speed?: number;\r\n-  particleColor?: string;\r\n-  particleDensity?: number;\r\n-};\r\n-export const SparklesCore = (props: ParticlesProps) => {\r\n-  const {\r\n-    id,\r\n-    className,\r\n-    background,\r\n-    minSize,\r\n-    maxSize,\r\n-    speed,\r\n-    particleColor,\r\n-    particleDensity,\r\n-  } = props;\r\n-  const [init, setInit] = useState(false);\r\n-  useEffect(() => {\r\n-    initParticlesEngine(async (engine) => {\r\n-      await loadSlim(engine);\r\n-    }).then(() => {\r\n-      setInit(true);\r\n-    });\r\n-  }, []);\r\n-  const controls = useAnimation();\r\n-\r\n-  const particlesLoaded = async (container?: Container) => {\r\n-    if (container) {\r\n-      console.log(container);\r\n-      controls.start({\r\n-        opacity: 1,\r\n-        transition: {\r\n-          duration: 1,\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <motion.div animate={controls} className={cn(\"opacity-0\", className)}>\r\n-      {init && (\r\n-        <Particles\r\n-          id={id || \"tsparticles\"}\r\n-          className={cn(\"h-full w-full\")}\r\n-          particlesLoaded={particlesLoaded}\r\n-          options={{\r\n-            background: {\r\n-              color: {\r\n-                value: background || \"#0d47a1\",\r\n-              },\r\n-            },\r\n-            fullScreen: {\r\n-              enable: false,\r\n-              zIndex: 1,\r\n-            },\r\n-\r\n-            fpsLimit: 120,\r\n-            interactivity: {\r\n-              events: {\r\n-                onClick: {\r\n-                  enable: true,\r\n-                  mode: \"push\",\r\n-                },\r\n-                onHover: {\r\n-                  enable: false,\r\n-                  mode: \"repulse\",\r\n-                },\r\n-                resize: true as any,\r\n-              },\r\n-              modes: {\r\n-                push: {\r\n-                  quantity: 4,\r\n-                },\r\n-                repulse: {\r\n-                  distance: 200,\r\n-                  duration: 0.4,\r\n-                },\r\n-              },\r\n-            },\r\n-            particles: {\r\n-              bounce: {\r\n-                horizontal: {\r\n-                  value: 1,\r\n-                },\r\n-                vertical: {\r\n-                  value: 1,\r\n-                },\r\n-              },\r\n-              collisions: {\r\n-                absorb: {\r\n-                  speed: 2,\r\n-                },\r\n-                bounce: {\r\n-                  horizontal: {\r\n-                    value: 1,\r\n-                  },\r\n-                  vertical: {\r\n-                    value: 1,\r\n-                  },\r\n-                },\r\n-                enable: false,\r\n-                maxSpeed: 50,\r\n-                mode: \"bounce\",\r\n-                overlap: {\r\n-                  enable: true,\r\n-                  retries: 0,\r\n-                },\r\n-              },\r\n-              color: {\r\n-                value: particleColor || \"#ffffff\",\r\n-                animation: {\r\n-                  h: {\r\n-                    count: 0,\r\n-                    enable: false,\r\n-                    speed: 1,\r\n-                    decay: 0,\r\n-                    delay: 0,\r\n-                    sync: true,\r\n-                    offset: 0,\r\n-                  },\r\n-                  s: {\r\n-                    count: 0,\r\n-                    enable: false,\r\n-                    speed: 1,\r\n-                    decay: 0,\r\n-                    delay: 0,\r\n-                    sync: true,\r\n-                    offset: 0,\r\n-                  },\r\n-                  l: {\r\n-                    count: 0,\r\n-                    enable: false,\r\n-                    speed: 1,\r\n-                    decay: 0,\r\n-                    delay: 0,\r\n-                    sync: true,\r\n-                    offset: 0,\r\n-                  },\r\n-                },\r\n-              },\r\n-              effect: {\r\n-                close: true,\r\n-                fill: true,\r\n-                options: {},\r\n-                type: {} as SingleOrMultiple<string> | undefined,\r\n-              },\r\n-              groups: {},\r\n-              move: {\r\n-                angle: {\r\n-                  offset: 0,\r\n-                  value: 90,\r\n-                },\r\n-                attract: {\r\n-                  distance: 200,\r\n-                  enable: false,\r\n-                  rotate: {\r\n-                    x: 3000,\r\n-                    y: 3000,\r\n-                  },\r\n-                },\r\n-                center: {\r\n-                  x: 50,\r\n-                  y: 50,\r\n-                  mode: \"percent\",\r\n-                  radius: 0,\r\n-                },\r\n-                decay: 0,\r\n-                distance: {},\r\n-                direction: \"none\",\r\n-                drift: 0,\r\n-                enable: true,\r\n-                gravity: {\r\n-                  acceleration: 9.81,\r\n-                  enable: false,\r\n-                  inverse: false,\r\n-                  maxSpeed: 50,\r\n-                },\r\n-                path: {\r\n-                  clamp: true,\r\n-                  delay: {\r\n-                    value: 0,\r\n-                  },\r\n-                  enable: false,\r\n-                  options: {},\r\n-                },\r\n-                outModes: {\r\n-                  default: \"out\",\r\n-                },\r\n-                random: false,\r\n-                size: false,\r\n-                speed: {\r\n-                  min: 0.1,\r\n-                  max: 1,\r\n-                },\r\n-                spin: {\r\n-                  acceleration: 0,\r\n-                  enable: false,\r\n-                },\r\n-                straight: false,\r\n-                trail: {\r\n-                  enable: false,\r\n-                  length: 10,\r\n-                  fill: {},\r\n-                },\r\n-                vibrate: false,\r\n-                warp: false,\r\n-              },\r\n-              number: {\r\n-                density: {\r\n-                  enable: true,\r\n-                  width: 400,\r\n-                  height: 400,\r\n-                },\r\n-                limit: {\r\n-                  mode: \"delete\",\r\n-                  value: 0,\r\n-                },\r\n-                value: particleDensity || 120,\r\n-              },\r\n-              opacity: {\r\n-                value: {\r\n-                  min: 0.1,\r\n-                  max: 1,\r\n-                },\r\n-                animation: {\r\n-                  count: 0,\r\n-                  enable: true,\r\n-                  speed: speed || 4,\r\n-                  decay: 0,\r\n-                  delay: 0,\r\n-                  sync: false,\r\n-                  mode: \"auto\",\r\n-                  startValue: \"random\",\r\n-                  destroy: \"none\",\r\n-                },\r\n-              },\r\n-              reduceDuplicates: false,\r\n-              shadow: {\r\n-                blur: 0,\r\n-                color: {\r\n-                  value: \"#000\",\r\n-                },\r\n-                enable: false,\r\n-                offset: {\r\n-                  x: 0,\r\n-                  y: 0,\r\n-                },\r\n-              },\r\n-              shape: {\r\n-                close: true,\r\n-                fill: true,\r\n-                options: {},\r\n-                type: \"circle\",\r\n-              },\r\n-              size: {\r\n-                value: {\r\n-                  min: minSize || 1,\r\n-                  max: maxSize || 3,\r\n-                },\r\n-                animation: {\r\n-                  count: 0,\r\n-                  enable: false,\r\n-                  speed: 5,\r\n-                  decay: 0,\r\n-                  delay: 0,\r\n-                  sync: false,\r\n-                  mode: \"auto\",\r\n-                  startValue: \"random\",\r\n-                  destroy: \"none\",\r\n-                },\r\n-              },\r\n-              stroke: {\r\n-                width: 0,\r\n-              },\r\n-              zIndex: {\r\n-                value: 0,\r\n-                opacityRate: 1,\r\n-                sizeRate: 1,\r\n-                velocityRate: 1,\r\n-              },\r\n-              destroy: {\r\n-                bounds: {},\r\n-                mode: \"none\",\r\n-                split: {\r\n-                  count: 1,\r\n-                  factor: {\r\n-                    value: 3,\r\n-                  },\r\n-                  rate: {\r\n-                    value: {\r\n-                      min: 4,\r\n-                      max: 9,\r\n-                    },\r\n-                  },\r\n-                  sizeOffset: true,\r\n-                },\r\n-              },\r\n-              roll: {\r\n-                darken: {\r\n-                  enable: false,\r\n-                  value: 0,\r\n-                },\r\n-                enable: false,\r\n-                enlighten: {\r\n-                  enable: false,\r\n-                  value: 0,\r\n-                },\r\n-                mode: \"vertical\",\r\n-                speed: 25,\r\n-              },\r\n-              tilt: {\r\n-                value: 0,\r\n-                animation: {\r\n-                  enable: false,\r\n-                  speed: 0,\r\n-                  decay: 0,\r\n-                  sync: false,\r\n-                },\r\n-                direction: \"clockwise\",\r\n-                enable: false,\r\n-              },\r\n-              twinkle: {\r\n-                lines: {\r\n-                  enable: false,\r\n-                  frequency: 0.05,\r\n-                  opacity: 1,\r\n-                },\r\n-                particles: {\r\n-                  enable: false,\r\n-                  frequency: 0.05,\r\n-                  opacity: 1,\r\n-                },\r\n-              },\r\n-              wobble: {\r\n-                distance: 5,\r\n-                enable: false,\r\n-                speed: {\r\n-                  angle: 50,\r\n-                  move: 10,\r\n-                },\r\n-              },\r\n-              life: {\r\n-                count: 0,\r\n-                delay: {\r\n-                  value: 0,\r\n-                  sync: false,\r\n-                },\r\n-                duration: {\r\n-                  value: 0,\r\n-                  sync: false,\r\n-                },\r\n-              },\r\n-              rotate: {\r\n-                value: 0,\r\n-                animation: {\r\n-                  enable: false,\r\n-                  speed: 0,\r\n-                  decay: 0,\r\n-                  sync: false,\r\n-                },\r\n-                direction: \"clockwise\",\r\n-                path: false,\r\n-              },\r\n-              orbit: {\r\n-                animation: {\r\n-                  count: 0,\r\n-                  enable: false,\r\n-                  speed: 1,\r\n-                  decay: 0,\r\n-                  delay: 0,\r\n-                  sync: false,\r\n-                },\r\n-                enable: false,\r\n-                opacity: 1,\r\n-                rotation: {\r\n-                  value: 45,\r\n-                },\r\n-                width: 1,\r\n-              },\r\n-              links: {\r\n-                blink: false,\r\n-                color: {\r\n-                  value: \"#fff\",\r\n-                },\r\n-                consent: false,\r\n-                distance: 100,\r\n-                enable: false,\r\n-                frequency: 1,\r\n-                opacity: 1,\r\n-                shadow: {\r\n-                  blur: 5,\r\n-                  color: {\r\n-                    value: \"#000\",\r\n-                  },\r\n-                  enable: false,\r\n-                },\r\n-                triangles: {\r\n-                  enable: false,\r\n-                  frequency: 1,\r\n-                },\r\n-                width: 1,\r\n-                warp: false,\r\n-              },\r\n-              repulse: {\r\n-                value: 0,\r\n-                enabled: false,\r\n-                distance: 1,\r\n-                duration: 1,\r\n-                factor: 1,\r\n-                speed: 1,\r\n-              },\r\n-            },\r\n-            detectRetina: true,\r\n-          }}\r\n-        />\r\n-      )}\r\n-    </motion.div>\r\n-  );\r\n-};\r\n+export default BoxesCore;\r\n"
                },
                {
                    "date": 1721479338474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+\"use client\";\r\n+import React from \"react\";\r\n+import { motion } from \"framer-motion\";\r\n+import { cn } from \"@/lib/utils\";\r\n+\r\n+const BoxesCore = ({ className , ...rest }:any) => {\r\n+  const rows = new Array(150).fill(1);\r\n+  const cols = new Array(100).fill(1);\r\n+  const colors = [\r\n+    \"--sky-300\",\r\n+    \"--pink-300\",\r\n+    \"--green-300\",\r\n+    \"--yellow-300\",\r\n+    \"--red-300\",\r\n+    \"--purple-300\",\r\n+    \"--blue-300\",\r\n+    \"--indigo-300\",\r\n+    \"--violet-300\",\r\n+  ];\r\n+\r\n+  const getRandomColor = () => {\r\n+    return colors[Math.floor(Math.random() * colors.length)];\r\n+  };\r\n+\r\n+  return (\r\n+    <div\r\n+      style={{\r\n+        transform: `translate(-40%,-60%) skewX(-48deg) skewY(14deg) scale(0.675) rotate(0deg) translateZ(0)`,\r\n+      }}\r\n+      className={cn(\r\n+        \"absolute left-1/4 p-4 -top-1/4 flex  -translate-x-1/2 -translate-y-1/2 w-full h-full z-0 \",\r\n+        className\r\n+      )}\r\n+      {...rest}\r\n+    >\r\n+      {rows.map((_, i) => (\r\n+        <motion.div\r\n+          key={`row${i}`}\r\n+          className=\"w-16 h-8 border-l border-slate-700 relative\"\r\n+        >\r\n+          {cols.map((_, j) => (\r\n+            <motion.div\r\n+              key={`col${j}`}\r\n+              whileHover={{\r\n+                backgroundColor: `var(${getRandomColor()})`,\r\n+                transition: { duration: 0 },\r\n+              }}\r\n+              animate={{\r\n+                transition: { duration: 2 },\r\n+              }}\r\n+              className=\"w-16 h-8 border-r border-t border-slate-700 relative\"\r\n+            >\r\n+              {j % 2 === 0 && i % 2 === 0 ? (\r\n+                <svg\r\n+                  xmlns=\"http://www.w3.org/2000/svg\"\r\n+                  fill=\"none\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                  strokeWidth=\"1.5\"\r\n+                  stroke=\"currentColor\"\r\n+                  className=\"absolute h-6 w-10 -top-[14px] -left-[22px] text-slate-700 stroke-[1px] pointer-events-none\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    d=\"M12 6v12m6-6H6\"\r\n+                  />\r\n+                </svg>\r\n+              ) : null}\r\n+            </motion.div>\r\n+          ))}\r\n+        </motion.div>\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default BoxesCore;\r\n"
                },
                {
                    "date": 1721479473478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,154 +1,54 @@\n \"use client\";\r\n-import React from \"react\";\r\n-import { motion } from \"framer-motion\";\r\n import { cn } from \"@/lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n \r\n-const BoxesCore = ({ className , ...rest }:any) => {\r\n-  const rows = new Array(150).fill(1);\r\n-  const cols = new Array(100).fill(1);\r\n-  const colors = [\r\n-    \"--sky-300\",\r\n-    \"--pink-300\",\r\n-    \"--green-300\",\r\n-    \"--yellow-300\",\r\n-    \"--red-300\",\r\n-    \"--purple-300\",\r\n-    \"--blue-300\",\r\n-    \"--indigo-300\",\r\n-    \"--violet-300\",\r\n-  ];\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n \r\n-  const getRandomColor = () => {\r\n-    return colors[Math.floor(Math.random() * colors.length)];\r\n-  };\r\n-\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n   return (\r\n-    <div\r\n-      style={{\r\n-        transform: `translate(-40%,-60%) skewX(-48deg) skewY(14deg) scale(0.675) rotate(0deg) translateZ(0)`,\r\n-      }}\r\n-      className={cn(\r\n-        \"absolute left-1/4 p-4 -top-1/4 flex  -translate-x-1/2 -translate-y-1/2 w-full h-full z-0 \",\r\n-        className\r\n-      )}\r\n-      {...rest}\r\n-    >\r\n-      {rows.map((_, i) => (\r\n-        <motion.div\r\n-          key={`row${i}`}\r\n-          className=\"w-16 h-8 border-l border-slate-700 relative\"\r\n-        >\r\n-          {cols.map((_, j) => (\r\n-            <motion.div\r\n-              key={`col${j}`}\r\n-              whileHover={{\r\n-                backgroundColor: `var(${getRandomColor()})`,\r\n-                transition: { duration: 0 },\r\n-              }}\r\n-              animate={{\r\n-                transition: { duration: 2 },\r\n-              }}\r\n-              className=\"w-16 h-8 border-r border-t border-slate-700 relative\"\r\n-            >\r\n-              {j % 2 === 0 && i % 2 === 0 ? (\r\n-                <svg\r\n-                  xmlns=\"http://www.w3.org/2000/svg\"\r\n-                  fill=\"none\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                  strokeWidth=\"1.5\"\r\n-                  stroke=\"currentColor\"\r\n-                  className=\"absolute h-6 w-10 -top-[14px] -left-[22px] text-slate-700 stroke-[1px] pointer-events-none\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    d=\"M12 6v12m6-6H6\"\r\n-                  />\r\n-                </svg>\r\n-              ) : null}\r\n-            </motion.div>\r\n-          ))}\r\n-        </motion.div>\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-};\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col  h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900  text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+          <div\r\n+            //   I'm sorry but this is what peak developer performance looks like // trigger warning\r\n+            className={cn(\r\n+              `\r\n+            [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+            [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+            [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+            [background-image:var(--white-gradient),var(--aurora)]\r\n+            dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            [background-size:300%,_200%]\r\n+            [background-position:50%_50%,50%_50%]\r\n+            filter blur-[10px] invert dark:invert-0\r\n+            after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+            after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            after:[background-size:200%,_100%] \r\n+            after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+            pointer-events-none\r\n+            absolute -inset-[10px] opacity-50 will-change-transform`,\r\n \r\n-export default BoxesCore;\r\n-\"use client\";\r\n-import React from \"react\";\r\n-import { motion } from \"framer-motion\";\r\n-import { cn } from \"@/lib/utils\";\r\n-\r\n-const BoxesCore = ({ className, ...rest }) => {\r\n-  const rows = new Array(150).fill(1);\r\n-  const cols = new Array(100).fill(1);\r\n-  const colors = [\r\n-    \"--sky-300\",\r\n-    \"--pink-300\",\r\n-    \"--green-300\",\r\n-    \"--yellow-300\",\r\n-    \"--red-300\",\r\n-    \"--purple-300\",\r\n-    \"--blue-300\",\r\n-    \"--indigo-300\",\r\n-    \"--violet-300\",\r\n-  ];\r\n-\r\n-  const getRandomColor = () => {\r\n-    return colors[Math.floor(Math.random() * colors.length)];\r\n-  };\r\n-\r\n-  return (\r\n-    <div\r\n-      style={{\r\n-        transform: `translate(-40%,-60%) skewX(-48deg) skewY(14deg) scale(0.675) rotate(0deg) translateZ(0)`,\r\n-      }}\r\n-      className={cn(\r\n-        \"absolute left-1/4 p-4 -top-1/4 flex  -translate-x-1/2 -translate-y-1/2 w-full h-full z-0 \",\r\n-        className\r\n-      )}\r\n-      {...rest}\r\n-    >\r\n-      {rows.map((_, i) => (\r\n-        <motion.div\r\n-          key={`row${i}`}\r\n-          className=\"w-16 h-8 border-l border-slate-700 relative\"\r\n-        >\r\n-          {cols.map((_, j) => (\r\n-            <motion.div\r\n-              key={`col${j}`}\r\n-              whileHover={{\r\n-                backgroundColor: `var(${getRandomColor()})`,\r\n-                transition: { duration: 0 },\r\n-              }}\r\n-              animate={{\r\n-                transition: { duration: 2 },\r\n-              }}\r\n-              className=\"w-16 h-8 border-r border-t border-slate-700 relative\"\r\n-            >\r\n-              {j % 2 === 0 && i % 2 === 0 ? (\r\n-                <svg\r\n-                  xmlns=\"http://www.w3.org/2000/svg\"\r\n-                  fill=\"none\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                  strokeWidth=\"1.5\"\r\n-                  stroke=\"currentColor\"\r\n-                  className=\"absolute h-6 w-10 -top-[14px] -left-[22px] text-slate-700 stroke-[1px] pointer-events-none\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    d=\"M12 6v12m6-6H6\"\r\n-                  />\r\n-                </svg>\r\n-              ) : null}\r\n-            </motion.div>\r\n-          ))}\r\n-        </motion.div>\r\n-      ))}\r\n-    </div>\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse_at_100%_0%,black_10%,var(--transparent)_70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n   );\r\n };\r\n-\r\n-export default BoxesCore;\r\n"
                },
                {
                    "date": 1721479583282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+\"use client\";\r\n+import { cn } from \"@/lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col  h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900  text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+          <div\r\n+            //   I'm sorry but this is what peak developer performance looks like // trigger warning\r\n+            className={cn(\r\n+              `\r\n+            [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+            [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+            [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+            [background-image:var(--white-gradient),var(--aurora)]\r\n+            dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            [background-size:300%,_200%]\r\n+            [background-position:50%_50%,50%_50%]\r\n+            filter blur-[10px] invert dark:invert-0\r\n+            after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+            after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            after:[background-size:200%,_100%] \r\n+            after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+            pointer-events-none\r\n+            absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse_at_100%_0%,black_10%,var(--transparent)_70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                },
                {
                    "date": 1721479598297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+\"use client\";\r\n+import { cn } from \"../../lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col  h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900  text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+          <div\r\n+            //   I'm sorry but this is what peak developer performance looks like // trigger warning\r\n+            className={cn(\r\n+              `\r\n+            [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+            [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+            [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+            [background-image:var(--white-gradient),var(--aurora)]\r\n+            dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            [background-size:300%,_200%]\r\n+            [background-position:50%_50%,50%_50%]\r\n+            filter blur-[10px] invert dark:invert-0\r\n+            after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+            after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            after:[background-size:200%,_100%] \r\n+            after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+            pointer-events-none\r\n+            absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse_at_100%_0%,black_10%,var(--transparent)_70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                },
                {
                    "date": 1721479761961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,52 @@\n+import { cn } from \"../../lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900 text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+          <div\r\n+            className={cn(\r\n+              `\r\n+              [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+              [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+              [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+              [background-image:var(--white-gradient),var(--aurora)]\r\n+              dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              [background-size:300%,_200%]\r\n+              [background-position:50%_50%,50%_50%]\r\n+              filter blur-[10px] invert dark:invert-0\r\n+              after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+              after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              after:[background-size:200%,_100%] \r\n+              after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+              pointer-events-none\r\n+              absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse at 100% 0%, black 10%, var(--transparent) 70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                },
                {
                    "date": 1721479776932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+import { cn } from \"../../lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900 text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+            xsdsackajajkkfywecewjh\r\n+          <div\r\n+            className={cn(\r\n+              `\r\n+              [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+              [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+              [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+              [background-image:var(--white-gradient),var(--aurora)]\r\n+              dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              [background-size:300%,_200%]\r\n+              [background-position:50%_50%,50%_50%]\r\n+              filter blur-[10px] invert dark:invert-0\r\n+              after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+              after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              after:[background-size:200%,_100%] \r\n+              after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+              pointer-events-none\r\n+              absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse at 100% 0%, black 10%, var(--transparent) 70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                },
                {
                    "date": 1721479874925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+import { cn } from \"../../lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900 text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+           <div className=\"text-red-500\"> xsdsackajajkkfywecewjh </div>\r\n+          <div\r\n+            className={cn(\r\n+              `\r\n+              [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+              [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+              [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+              [background-image:var(--white-gradient),var(--aurora)]\r\n+              dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              [background-size:300%,_200%]\r\n+              [background-position:50%_50%,50%_50%]\r\n+              filter blur-[10px] invert dark:invert-0\r\n+              after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+              after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              after:[background-size:200%,_100%] \r\n+              after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+              pointer-events-none\r\n+              absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse at 100% 0%, black 10%, var(--transparent) 70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                },
                {
                    "date": 1721480034815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+import { cn } from \"../../lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900 text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+           <div className=\"text-red-500\"> xsdsackajajkkfywecewjh </div>\r\n+          <div\r\n+            className={cn(\r\n+              `\r\n+              [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+              [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+              [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+              [background-image:var(--white-gradient),var(--aurora)]\r\n+              dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              [background-size:300%,_200%]\r\n+              [background-position:50%_50%,50%_50%]\r\n+              filter blur-[10px] invert dark:invert-0\r\n+              after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+              after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+              after:[background-size:200%,_100%] \r\n+              after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+              pointer-events-none\r\n+              absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse at 100% 0%, black 10%, var(--transparent) 70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                },
                {
                    "date": 1721480945416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+\"use client\";\r\n+import { cn } from \"../../lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col  h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900  text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+          <div\r\n+            //   I'm sorry but this is what peak developer performance looks like // trigger warning\r\n+            className={cn(\r\n+              `\r\n+            [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+            [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+            [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+            [background-image:var(--white-gradient),var(--aurora)]\r\n+            dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            [background-size:300%,_200%]\r\n+            [background-position:50%_50%,50%_50%]\r\n+            filter blur-[10px] invert dark:invert-0\r\n+            after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+            after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            after:[background-size:200%,_100%] \r\n+            after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+            pointer-events-none\r\n+            absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse_at_100%_0%,black_10%,var(--transparent)_70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                },
                {
                    "date": 1721629960179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+\"use client\";\r\n+import { cn } from \"../../lib/utils\";\r\n+import React, { ReactNode } from \"react\";\r\n+\r\n+interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {\r\n+  children: ReactNode;\r\n+  showRadialGradient?: boolean;\r\n+}\r\n+\r\n+export const AuroraBackground = ({\r\n+  className,\r\n+  children,\r\n+  showRadialGradient = true,\r\n+  ...props\r\n+}: AuroraBackgroundProps) => {\r\n+  return (\r\n+    <main>\r\n+      <div\r\n+        className={cn(\r\n+          \"relative flex flex-col  h-[100vh] items-center justify-center bg-zinc-50 dark:bg-zinc-900  text-slate-950 transition-bg\",\r\n+          className\r\n+        )}\r\n+        {...props}\r\n+      >\r\n+        <div className=\"absolute inset-0 overflow-hidden\">\r\n+          <div\r\n+            //   I'm sorry but this is what peak developer performance looks like // trigger warning\r\n+            className={cn(\r\n+              `\r\n+            [--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]\r\n+            [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]\r\n+            [--aurora:repeating-linear-gradient(100deg,var(--blue-500)_10%,var(--indigo-300)_15%,var(--blue-300)_20%,var(--violet-200)_25%,var(--blue-400)_30%)]\r\n+            [background-image:var(--white-gradient),var(--aurora)]\r\n+            dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            [background-size:300%,_200%]\r\n+            [background-position:50%_50%,50%_50%]\r\n+            filter blur-[10px] invert dark:invert-0\r\n+            after:content-[\"\"] after:absolute after:inset-0 after:[background-image:var(--white-gradient),var(--aurora)] \r\n+            after:dark:[background-image:var(--dark-gradient),var(--aurora)]\r\n+            after:[background-size:200%,_100%] \r\n+            after:animate-aurora after:[background-attachment:fixed] after:mix-blend-difference\r\n+            pointer-events-none\r\n+            absolute -inset-[10px] opacity-50 will-change-transform`,\r\n+\r\n+              showRadialGradient &&\r\n+                `[mask-image:radial-gradient(ellipse_at_100%_0%,black_10%,var(--transparent)_70%)]`\r\n+            )}\r\n+          ></div>\r\n+        </div>\r\n+        {children}\r\n+      </div>\r\n+    </main>\r\n+  );\r\n+};\r\n"
                }
            ],
            "date": 1721478657273,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\r\nimport type { Container, SingleOrMultiple } from \"@tsparticles/engine\";\r\nimport { loadSlim } from \"@tsparticles/slim\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\ntype ParticlesProps = {\r\n  id?: string;\r\n  className?: string;\r\n  background?: string;\r\n  particleSize?: number;\r\n  minSize?: number;\r\n  maxSize?: number;\r\n  speed?: number;\r\n  particleColor?: string;\r\n  particleDensity?: number;\r\n};\r\nexport const SparklesCore = (props: ParticlesProps) => {\r\n  const {\r\n    id,\r\n    className,\r\n    background,\r\n    minSize,\r\n    maxSize,\r\n    speed,\r\n    particleColor,\r\n    particleDensity,\r\n  } = props;\r\n  const [init, setInit] = useState(false);\r\n  useEffect(() => {\r\n    initParticlesEngine(async (engine) => {\r\n      await loadSlim(engine);\r\n    }).then(() => {\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const controls = useAnimation();\r\n\r\n  const particlesLoaded = async (container?: Container) => {\r\n    if (container) {\r\n      console.log(container);\r\n      controls.start({\r\n        opacity: 1,\r\n        transition: {\r\n          duration: 1,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div animate={controls} className={cn(\"opacity-0\", className)}>\r\n      {init && (\r\n        <Particles\r\n          id={id || \"tsparticles\"}\r\n          className={cn(\"h-full w-full\")}\r\n          particlesLoaded={particlesLoaded}\r\n          options={{\r\n            background: {\r\n              color: {\r\n                value: background || \"#0d47a1\",\r\n              },\r\n            },\r\n            fullScreen: {\r\n              enable: false,\r\n              zIndex: 1,\r\n            },\r\n\r\n            fpsLimit: 120,\r\n            interactivity: {\r\n              events: {\r\n                onClick: {\r\n                  enable: true,\r\n                  mode: \"push\",\r\n                },\r\n                onHover: {\r\n                  enable: false,\r\n                  mode: \"repulse\",\r\n                },\r\n                resize: true as any,\r\n              },\r\n              modes: {\r\n                push: {\r\n                  quantity: 4,\r\n                },\r\n                repulse: {\r\n                  distance: 200,\r\n                  duration: 0.4,\r\n                },\r\n              },\r\n            },\r\n            particles: {\r\n              bounce: {\r\n                horizontal: {\r\n                  value: 1,\r\n                },\r\n                vertical: {\r\n                  value: 1,\r\n                },\r\n              },\r\n              collisions: {\r\n                absorb: {\r\n                  speed: 2,\r\n                },\r\n                bounce: {\r\n                  horizontal: {\r\n                    value: 1,\r\n                  },\r\n                  vertical: {\r\n                    value: 1,\r\n                  },\r\n                },\r\n                enable: false,\r\n                maxSpeed: 50,\r\n                mode: \"bounce\",\r\n                overlap: {\r\n                  enable: true,\r\n                  retries: 0,\r\n                },\r\n              },\r\n              color: {\r\n                value: particleColor || \"#ffffff\",\r\n                animation: {\r\n                  h: {\r\n                    count: 0,\r\n                    enable: false,\r\n                    speed: 1,\r\n                    decay: 0,\r\n                    delay: 0,\r\n                    sync: true,\r\n                    offset: 0,\r\n                  },\r\n                  s: {\r\n                    count: 0,\r\n                    enable: false,\r\n                    speed: 1,\r\n                    decay: 0,\r\n                    delay: 0,\r\n                    sync: true,\r\n                    offset: 0,\r\n                  },\r\n                  l: {\r\n                    count: 0,\r\n                    enable: false,\r\n                    speed: 1,\r\n                    decay: 0,\r\n                    delay: 0,\r\n                    sync: true,\r\n                    offset: 0,\r\n                  },\r\n                },\r\n              },\r\n              effect: {\r\n                close: true,\r\n                fill: true,\r\n                options: {},\r\n                type: {} as SingleOrMultiple<string> | undefined,\r\n              },\r\n              groups: {},\r\n              move: {\r\n                angle: {\r\n                  offset: 0,\r\n                  value: 90,\r\n                },\r\n                attract: {\r\n                  distance: 200,\r\n                  enable: false,\r\n                  rotate: {\r\n                    x: 3000,\r\n                    y: 3000,\r\n                  },\r\n                },\r\n                center: {\r\n                  x: 50,\r\n                  y: 50,\r\n                  mode: \"percent\",\r\n                  radius: 0,\r\n                },\r\n                decay: 0,\r\n                distance: {},\r\n                direction: \"none\",\r\n                drift: 0,\r\n                enable: true,\r\n                gravity: {\r\n                  acceleration: 9.81,\r\n                  enable: false,\r\n                  inverse: false,\r\n                  maxSpeed: 50,\r\n                },\r\n                path: {\r\n                  clamp: true,\r\n                  delay: {\r\n                    value: 0,\r\n                  },\r\n                  enable: false,\r\n                  options: {},\r\n                },\r\n                outModes: {\r\n                  default: \"out\",\r\n                },\r\n                random: false,\r\n                size: false,\r\n                speed: {\r\n                  min: 0.1,\r\n                  max: 1,\r\n                },\r\n                spin: {\r\n                  acceleration: 0,\r\n                  enable: false,\r\n                },\r\n                straight: false,\r\n                trail: {\r\n                  enable: false,\r\n                  length: 10,\r\n                  fill: {},\r\n                },\r\n                vibrate: false,\r\n                warp: false,\r\n              },\r\n              number: {\r\n                density: {\r\n                  enable: true,\r\n                  width: 400,\r\n                  height: 400,\r\n                },\r\n                limit: {\r\n                  mode: \"delete\",\r\n                  value: 0,\r\n                },\r\n                value: particleDensity || 120,\r\n              },\r\n              opacity: {\r\n                value: {\r\n                  min: 0.1,\r\n                  max: 1,\r\n                },\r\n                animation: {\r\n                  count: 0,\r\n                  enable: true,\r\n                  speed: speed || 4,\r\n                  decay: 0,\r\n                  delay: 0,\r\n                  sync: false,\r\n                  mode: \"auto\",\r\n                  startValue: \"random\",\r\n                  destroy: \"none\",\r\n                },\r\n              },\r\n              reduceDuplicates: false,\r\n              shadow: {\r\n                blur: 0,\r\n                color: {\r\n                  value: \"#000\",\r\n                },\r\n                enable: false,\r\n                offset: {\r\n                  x: 0,\r\n                  y: 0,\r\n                },\r\n              },\r\n              shape: {\r\n                close: true,\r\n                fill: true,\r\n                options: {},\r\n                type: \"circle\",\r\n              },\r\n              size: {\r\n                value: {\r\n                  min: minSize || 1,\r\n                  max: maxSize || 3,\r\n                },\r\n                animation: {\r\n                  count: 0,\r\n                  enable: false,\r\n                  speed: 5,\r\n                  decay: 0,\r\n                  delay: 0,\r\n                  sync: false,\r\n                  mode: \"auto\",\r\n                  startValue: \"random\",\r\n                  destroy: \"none\",\r\n                },\r\n              },\r\n              stroke: {\r\n                width: 0,\r\n              },\r\n              zIndex: {\r\n                value: 0,\r\n                opacityRate: 1,\r\n                sizeRate: 1,\r\n                velocityRate: 1,\r\n              },\r\n              destroy: {\r\n                bounds: {},\r\n                mode: \"none\",\r\n                split: {\r\n                  count: 1,\r\n                  factor: {\r\n                    value: 3,\r\n                  },\r\n                  rate: {\r\n                    value: {\r\n                      min: 4,\r\n                      max: 9,\r\n                    },\r\n                  },\r\n                  sizeOffset: true,\r\n                },\r\n              },\r\n              roll: {\r\n                darken: {\r\n                  enable: false,\r\n                  value: 0,\r\n                },\r\n                enable: false,\r\n                enlighten: {\r\n                  enable: false,\r\n                  value: 0,\r\n                },\r\n                mode: \"vertical\",\r\n                speed: 25,\r\n              },\r\n              tilt: {\r\n                value: 0,\r\n                animation: {\r\n                  enable: false,\r\n                  speed: 0,\r\n                  decay: 0,\r\n                  sync: false,\r\n                },\r\n                direction: \"clockwise\",\r\n                enable: false,\r\n              },\r\n              twinkle: {\r\n                lines: {\r\n                  enable: false,\r\n                  frequency: 0.05,\r\n                  opacity: 1,\r\n                },\r\n                particles: {\r\n                  enable: false,\r\n                  frequency: 0.05,\r\n                  opacity: 1,\r\n                },\r\n              },\r\n              wobble: {\r\n                distance: 5,\r\n                enable: false,\r\n                speed: {\r\n                  angle: 50,\r\n                  move: 10,\r\n                },\r\n              },\r\n              life: {\r\n                count: 0,\r\n                delay: {\r\n                  value: 0,\r\n                  sync: false,\r\n                },\r\n                duration: {\r\n                  value: 0,\r\n                  sync: false,\r\n                },\r\n              },\r\n              rotate: {\r\n                value: 0,\r\n                animation: {\r\n                  enable: false,\r\n                  speed: 0,\r\n                  decay: 0,\r\n                  sync: false,\r\n                },\r\n                direction: \"clockwise\",\r\n                path: false,\r\n              },\r\n              orbit: {\r\n                animation: {\r\n                  count: 0,\r\n                  enable: false,\r\n                  speed: 1,\r\n                  decay: 0,\r\n                  delay: 0,\r\n                  sync: false,\r\n                },\r\n                enable: false,\r\n                opacity: 1,\r\n                rotation: {\r\n                  value: 45,\r\n                },\r\n                width: 1,\r\n              },\r\n              links: {\r\n                blink: false,\r\n                color: {\r\n                  value: \"#fff\",\r\n                },\r\n                consent: false,\r\n                distance: 100,\r\n                enable: false,\r\n                frequency: 1,\r\n                opacity: 1,\r\n                shadow: {\r\n                  blur: 5,\r\n                  color: {\r\n                    value: \"#000\",\r\n                  },\r\n                  enable: false,\r\n                },\r\n                triangles: {\r\n                  enable: false,\r\n                  frequency: 1,\r\n                },\r\n                width: 1,\r\n                warp: false,\r\n              },\r\n              repulse: {\r\n                value: 0,\r\n                enabled: false,\r\n                distance: 1,\r\n                duration: 1,\r\n                factor: 1,\r\n                speed: 1,\r\n              },\r\n            },\r\n            detectRetina: true,\r\n          }}\r\n        />\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n"
        }
    ]
}